import CSVModule, PickleModule, TXTModule  # Подключаем модулей для работы с файлами
import GetColumnsTypes  # Подключаем модуль получения типа данных столбцов


data = []  # Таблица данных
types = []  # Типы данных столбцов


def get_values(column=0):  # Функция получение столбца
    if isinstance(column, str):  # Если введена строка
        if column.isdigit():  # Если введено целое число
            column = int(column)  # Превращаем переменную в целое число
        else:  # Если введена строка
            column = data[0].index(column)  # Получаем индекс - название столбца

    result = []  # Столбец
    for i in data[1:]:  # Цикл по строкам
        result.append(i[column])  # Сохраняем нужный столбец

    return result  # Возвращаем найденный столбец


def get_value(column=0):  # Функция получения значения по столбцу
    if isinstance(column, str):  # Если введена строка
        if column.isdigit():  # Если это целое число
            column = int(column)  # То превращаем переменную в целое число
        else:  # Если введена строка
            column = data[0].index(column)  # Получаем индекс - название столбца

    return data[1][column]  # Возвращаем нужное значение


def get_rows_by_number(start, stop, copy_table=False):  # Функция получения строк
    global data  # Задаем глобальную переменную

    complete_data = []  # Полученные строки

    for i in range(start + 1, stop + 2):  # Цикл от начальной до конечной строки
        complete_data.append(data[i])  # Записываем текущую строку

    if copy_table:  # Если нужно скопировать таблицу
        data = [data[0]] + complete_data  # То сохраняем ее с названиями столбцов

    return complete_data  # Возвращаем найденные строки


def get_rows_by_index(copy_table=False, *val):  # Функция получения строк по индексам
    global data  # Задаем глобальную переменную

    complete_data = []  # Полученные строки

    for i in list(*val):  # Цикл по индексам
        complete_data.append(data[i + 1])  # Сохраняем текущую строку

    if copy_table:  # Если нужно скопировать таблицу
        data = [data[0]] + complete_data  # Сохраняем ее с названиями столбцов

    return complete_data  # Возвращаем найденные строки


def set_values(values, column=0):  # Метод задания столбца
    if isinstance(column, str):  # Если столбец - строка
        if column.isdigit():  # Если столбец - число
            column = int(column)  # Превращаем его в число
        else:  # Если строка
            column = data[0].index(column)  # Записываем индекс этого столбца

    for i in range(1, len(data)):  # Цикл по строкам
        data[i][column] = values[i - 1]  # Заменяем столбец на нужный


def set_value(value, column=0):  # Метод задания первого элемента столбца
    if isinstance(column, str):  # Если столбец - строка
        if column.isdigit():  # Если столбец - число
            column = int(column)  # Превращаем его в число
        else:  # Если строка
            column = data[0].index(column)  # Записываем индекс этого столбца

    data[1][column] = value  # Записываем нужное значение


def print_table():  # Метод вывода таблицы данных
    for i in data:  # Цикл по строкам
        print(*i)  # Выводим текущую строку


operations = {
    '0': 'импорт данных из файла .csv',
    '1': 'импорт данных из файла .pkl',
    '2': 'импорт данных из файла .txt',
    '3': 'сохранение данных в файл .csv',
    '4': 'сохранение данных в файл .pkl',
    '5': 'сохранение данных в файл .txt',
    '6': 'типы данных столбцов',
    '7': 'вывод столбца',
    '8': 'вывод элемента столбца',
    '9': 'вывод таблицы',
    '10': 'вывод строк',
    '11': 'вывод строк по индексам',
    '12': 'задать столбец',
    '13': 'задать значение',
}  # Возможные операции

while True:  # Бесконечный цикл для получения ввода от пользователя
    print('Таблица', data)  # Выводим текущую таблицу
    print('Типы данных столбов', types)  # Выводим типы данныхх текущей таблицы, если они есть
    print('\nРабота с таблицами')  # Название программы
    for i in list(operations.keys()):  # Цикл по всем операциям
        print(i + ' - ' + operations[i])  # Выводим все операции

    a = input('\nНомер команды: ')  # Получаем команду от пользователя
    if a not in list(operations.keys()):  # Если введенная команда невозможна
        exit()  # Выходим из программы
    else:  # Если введена правильная команда
        if int(a) < 6:  # Если это импорт или экспорт данных
            # Получаем названия файлов
            b = input('Если файлов несколько, то запишите их названия через пробел\nНазвание файла без расширения: ')
            while b == '':
                print('Неправильный ввод')
                b = input('Если файлов несколько, то запишите их названия через пробел\nНазвание файла без расширения: ')

            # Получаем дополнительные параметры
            c = ''
            if int(a) < 3:
                c = input('Получить таблицу с типами дыннах столбцов? (y or n): ')
                while c != 'y' and c != 'n':
                    print('Неправильный ввод')
                    c = input('Получить таблицу с типами дыннах столбцов? (y or n): ')
            elif int(a) < 5:
                c = input('Разделить таблицу на несколько файлов? Если да, то напишите максимальное кол-во строк' +
                          'в файле. Если нет, то напишите 0: ')
                while not c.isdigit():
                    print('Неправильный ввод')
                    c = input('Разделить таблицу на несколько файлов? Если да, то напишите максимальное' +
                              'кол-во строк в файле. Если нет, то напишите 0: ')

            # Конвертируем полученные параметры для дальнейшей работы
            if c == 'y':
                c = True
            elif c == 'n':
                c = False
            elif c.isdigit():
                c = int(c)

            if a == '0':  # Если это импорт (0, 1, 2)
                a = CSVModule.load_table(c, b.split())  # Выполняем загрузку таблицы
                if a != False:  # Если удалось получить данные из файла
                    data = a[1:]  # Записываем данные
                    types = a[0]  # Записываем типы данных столбцов
                else:  # Если не удалось получить данные из файла
                    print('Ошибка')  # Выводим сообщение об ошибке
            elif a == '1':
                a = PickleModule.load_table(c, b.split())
                if a != False:
                    data = a[1:]
                    types = a[0]
                else:
                    print('Ошибка')
            elif a == '2':
                a = TXTModule.load_table(c, b.split()[0])
                if a != False:
                    data = a[1:]
                    types = a[0]
                else:
                    print('Ошибка')
            elif a == '3':  # Если это экспорт (3, 4, 5)
                print(CSVModule.save_table(data, c, b.split()))  # Выводим результат операции сохранения таблицы
            elif a == '4':
                print(PickleModule.save_table(data, c, b.split()))
            elif a == '5':
                print(TXTModule.save_table(data, b.split()[0]))
        elif a == '6':  # Если это получение типа данных столбцов
            c = input('Вывести названия или номера столбцов? (1 - названия, 2 - номера): ')  # Получаем
            # дополнительный параметр
            while c != '1' and c != '2':
                print('Неправильный ввод')
                c = input('Вывести названия или номера столбцов? (1 - названия, 2 - номера): ')

            # Конвертируем полученный ввод для дальнейшей работы
            if c == '1':
                c = False
            else:
                c = True

            types = GetColumnsTypes.get_column_types(data, c)  # Получаем типы данных столбцов
        elif a == '7':  # Если нужно вывести столбец
            b = input('Введите номер или имя столбца: ')  # Получаем номер или название столбца
            while b == '':
                print('Неправильный ввод')
                b = input('Введите номер или имя столбца: ')

            try:  # Пробуем выполнить операцию
                print(get_values(b))  # Выводим результат операции получения столбца
            except:  # Если не получилось
                print('Такого столбца нет')  # Выводим сообщение, что такого столбца нет
        elif a == '8':  # Если нужно вывести значение в столбце
            b = input('Введите номер или имя столбца: ')  # Получаем номер или название столбца
            while b == '':
                print('Неправильный ввод')
                b = input('Введите номер или имя столбца: ')

            try:  # Пробуем выполнить операцию
                print(get_value(b))  # Выводим результат операции
            except:  # Если не получилось
                print('Такого столбца нет')  # Выводим сообщение об ошибке
        elif a == '9':  # Если нужно вывести таблицу данных
            print_table()  # Вызываем метод вывода таблицы данных
        elif a == '10':  # Если нужно вывести строки
            b = input('Введите начальную строку: ')  # Получаем номер начальной строки
            while b == '' or not b.isdigit():
                print('Неправильный ввод')
                b = input('Введите начальную строку: ')

            c = input('Введите конечную строку: ')  # Получаем номер конечной строки
            while c == '' or not c.isdigit():
                print('Неправильный ввод')
                c = input('Введите конечную строку: ')

            d = input('Копировать таблицу? (y or n): ')  # Узнаем нужно ли копировать таблицу
            while d != 'y' and d != 'n':
                print('Неправильный ввод')
                d = input('Копировать таблицу? (y or n): ')

            # Конвертируем полученные данные
            if d == 'y':
                d = True
            else:
                d = False

            try:  # Пробуем выполнить операцию
                f = get_rows_by_number(int(b), int(c), d)  # Получаем строки
                print(*data[0])  # Выводим названия столбцов

                for i in f:  # Цикл по полученный строкам
                    print(*i)  # Выводим текущую строку
            except:  # Если не получилось
                print('Ошибка')  # Выводим сообщение об ошибке
        elif a == '11':  # Если нужно вывести строки по индексам
            b = input('Введите индексы через пробел: ')  # Получаем индексы строк
            try:  # Проверяем корректность введенных данных
                list(map(int, b.split()))
            except:  # Если неправильный ввод
                while True:  # Пробуем получить данные заново
                    print('Неправильный ввод')  # Выводим сообщение об ошибке
                    b = input('Введите индексы через пробел: ')  # Получаем индексы строк
                    try:  # Проверяем корректность введенных данных
                        list(map(int, b.split()))
                        break  # Если получилось, останавливаем получение данных
                    except:  # Если не получилось
                        pass  # Заново получаем данные

            d = input('Копировать таблицу? (y or n): ')  # Узнаем нужно ли копировать таблицу
            while d != 'y' and d != 'n':  # Проверяем корректность введенных данных
                print('Неправильный ввод')  # Если неправильный ввод, выводим сообщение об ошибке
                d = input('Копировать таблицу? (y or n): ')  # Заново получаем данные

            # Конвертируем полученные данные
            if d == 'y':
                d = True
            else:
                d = False

            try:  # Пробуем выполнить операцию
                f = get_rows_by_index(d, list(map(int, b.split())))  # Получаем строки
                print(*data[0])  # Выводим названия столбцов

                for i in f:  # Цикл по полученным строкам
                    print(*i)  # Выводим текущую строку
            except:  # Если не получилось
                print('Ошибка')  # Выводим сообщение об ошибке
        elif a == '12':  # Если нужно задать столбец
            b = input('Номер или название столбца: ')  # Получаем номер или название столбца
            while b == '':
                print('Неправильный ввод')
                b = input('Номер или название столбца: ')

            c = input('Значения через пробел: ')  # Получаем нужные значения
            while c == '':
                print('Неправильный ввод')
                c = input('Значения через пробел: ')

            try:  # Пробуем выполнить операцию
                set_values(c.split(), b)
            except:  # Если не получилось
                print('Ошибка')  # Выводим сообщение об ошибке
        elif a == '13':  # Если нужно задать значение
            b = input('Номер или название столбца: ')  # Получаем номер или название столбца
            while b == '':
                print('Неправильный ввод')
                b = input('Номер или название столбца: ')

            c = input('Значение: ')  # Получаем нужное значение
            while c == '':
                print('Неправильный ввод')
                c = input('Значение: ')

            try:  # Пробуем выполнить операцию
                set_value(c, b)
            except:  # Если не получилось
                print('Ошибка')  # Выводим сообщение об ошибке
